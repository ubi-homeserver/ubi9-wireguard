name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '44 2 * * *'
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.13.1'

      - name: Log into registry registry.redhat.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: registry.redhat.io
          username: "${{ secrets.REDHAT_REGISTRY_USER }}"
          password: "${{ secrets.REDHAT_REGISTRY_TOKEN }}"
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-ghcr
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ghcr.io/${{ github.repository }}
            
      - name: Extract Docker metadata
        id: meta-docker
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            docker.io/ubihomelab/ubi9-wireguard

      - shell: bash
        env:
          ENTITLEMENT: ${{ secrets.REDHAT_ENTITLEMENT_KEY }}
        run: |
          echo "$ENTITLEMENT" | base64 --decode > entitlement
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          tags: ${{ steps.meta-ghcr.outputs.tags }} ${{ steps.meta-docker.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          extra-args: |
            --secret=id=entitlement,src=./entitlement
          build-args: |
            REDHAT_ORG_ID=${{ secrets.REDHAT_ORG_ID }}
            REDHAT_ACTIVATION_KEY=${{ secrets.REDHAT_ACTIVATION_KEY }}
          containerfiles: |
            ./Dockerfile

      # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
      # in which case 'username' and 'password' can be omitted.
      - name: Push To docker.io
        if: ${{ github.event_name != 'pull_request' }}
        id: push-to-docker
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.meta-docker.outputs.tags }}
          registry: docker.io
          username: "${{ secrets.DOCKER_REGISTRY_USER }}"
          password: "${{ secrets.DOCKER_REGISTRY_TOKEN }}"
      - name: Push To ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          tags:  ${{ steps.meta-ghcr.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
